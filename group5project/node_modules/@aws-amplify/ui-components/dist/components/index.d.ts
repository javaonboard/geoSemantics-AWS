/* AmplifyUiComponents custom elements bundle */

import { Components } from "../types/components";

interface AmplifyAmazonButton extends Components.AmplifyAmazonButton, HTMLElement {}
export const AmplifyAmazonButton: {
  prototype: AmplifyAmazonButton;
  new (): AmplifyAmazonButton;
};

interface AmplifyAuthFields extends Components.AmplifyAuthFields, HTMLElement {}
export const AmplifyAuthFields: {
  prototype: AmplifyAuthFields;
  new (): AmplifyAuthFields;
};

interface AmplifyAuth0Button extends Components.AmplifyAuth0Button, HTMLElement {}
export const AmplifyAuth0Button: {
  prototype: AmplifyAuth0Button;
  new (): AmplifyAuth0Button;
};

interface AmplifyAuthenticator extends Components.AmplifyAuthenticator, HTMLElement {}
export const AmplifyAuthenticator: {
  prototype: AmplifyAuthenticator;
  new (): AmplifyAuthenticator;
};

interface AmplifyButton extends Components.AmplifyButton, HTMLElement {}
export const AmplifyButton: {
  prototype: AmplifyButton;
  new (): AmplifyButton;
};

interface AmplifyChatbot extends Components.AmplifyChatbot, HTMLElement {}
export const AmplifyChatbot: {
  prototype: AmplifyChatbot;
  new (): AmplifyChatbot;
};

interface AmplifyCheckbox extends Components.AmplifyCheckbox, HTMLElement {}
export const AmplifyCheckbox: {
  prototype: AmplifyCheckbox;
  new (): AmplifyCheckbox;
};

interface AmplifyCodeField extends Components.AmplifyCodeField, HTMLElement {}
export const AmplifyCodeField: {
  prototype: AmplifyCodeField;
  new (): AmplifyCodeField;
};

interface AmplifyConfirmSignIn extends Components.AmplifyConfirmSignIn, HTMLElement {}
export const AmplifyConfirmSignIn: {
  prototype: AmplifyConfirmSignIn;
  new (): AmplifyConfirmSignIn;
};

interface AmplifyConfirmSignUp extends Components.AmplifyConfirmSignUp, HTMLElement {}
export const AmplifyConfirmSignUp: {
  prototype: AmplifyConfirmSignUp;
  new (): AmplifyConfirmSignUp;
};

interface AmplifyContainer extends Components.AmplifyContainer, HTMLElement {}
export const AmplifyContainer: {
  prototype: AmplifyContainer;
  new (): AmplifyContainer;
};

interface AmplifyCountryDialCode extends Components.AmplifyCountryDialCode, HTMLElement {}
export const AmplifyCountryDialCode: {
  prototype: AmplifyCountryDialCode;
  new (): AmplifyCountryDialCode;
};

interface AmplifyEmailField extends Components.AmplifyEmailField, HTMLElement {}
export const AmplifyEmailField: {
  prototype: AmplifyEmailField;
  new (): AmplifyEmailField;
};

interface AmplifyFacebookButton extends Components.AmplifyFacebookButton, HTMLElement {}
export const AmplifyFacebookButton: {
  prototype: AmplifyFacebookButton;
  new (): AmplifyFacebookButton;
};

interface AmplifyFederatedButtons extends Components.AmplifyFederatedButtons, HTMLElement {}
export const AmplifyFederatedButtons: {
  prototype: AmplifyFederatedButtons;
  new (): AmplifyFederatedButtons;
};

interface AmplifyFederatedSignIn extends Components.AmplifyFederatedSignIn, HTMLElement {}
export const AmplifyFederatedSignIn: {
  prototype: AmplifyFederatedSignIn;
  new (): AmplifyFederatedSignIn;
};

interface AmplifyForgotPassword extends Components.AmplifyForgotPassword, HTMLElement {}
export const AmplifyForgotPassword: {
  prototype: AmplifyForgotPassword;
  new (): AmplifyForgotPassword;
};

interface AmplifyFormField extends Components.AmplifyFormField, HTMLElement {}
export const AmplifyFormField: {
  prototype: AmplifyFormField;
  new (): AmplifyFormField;
};

interface AmplifyFormSection extends Components.AmplifyFormSection, HTMLElement {}
export const AmplifyFormSection: {
  prototype: AmplifyFormSection;
  new (): AmplifyFormSection;
};

interface AmplifyGoogleButton extends Components.AmplifyGoogleButton, HTMLElement {}
export const AmplifyGoogleButton: {
  prototype: AmplifyGoogleButton;
  new (): AmplifyGoogleButton;
};

interface AmplifyGreetings extends Components.AmplifyGreetings, HTMLElement {}
export const AmplifyGreetings: {
  prototype: AmplifyGreetings;
  new (): AmplifyGreetings;
};

interface AmplifyHint extends Components.AmplifyHint, HTMLElement {}
export const AmplifyHint: {
  prototype: AmplifyHint;
  new (): AmplifyHint;
};

interface AmplifyIcon extends Components.AmplifyIcon, HTMLElement {}
export const AmplifyIcon: {
  prototype: AmplifyIcon;
  new (): AmplifyIcon;
};

interface AmplifyIconButton extends Components.AmplifyIconButton, HTMLElement {}
export const AmplifyIconButton: {
  prototype: AmplifyIconButton;
  new (): AmplifyIconButton;
};

interface AmplifyInput extends Components.AmplifyInput, HTMLElement {}
export const AmplifyInput: {
  prototype: AmplifyInput;
  new (): AmplifyInput;
};

interface AmplifyLabel extends Components.AmplifyLabel, HTMLElement {}
export const AmplifyLabel: {
  prototype: AmplifyLabel;
  new (): AmplifyLabel;
};

interface AmplifyLink extends Components.AmplifyLink, HTMLElement {}
export const AmplifyLink: {
  prototype: AmplifyLink;
  new (): AmplifyLink;
};

interface AmplifyLoadingSpinner extends Components.AmplifyLoadingSpinner, HTMLElement {}
export const AmplifyLoadingSpinner: {
  prototype: AmplifyLoadingSpinner;
  new (): AmplifyLoadingSpinner;
};

interface AmplifyNav extends Components.AmplifyNav, HTMLElement {}
export const AmplifyNav: {
  prototype: AmplifyNav;
  new (): AmplifyNav;
};

interface AmplifyOauthButton extends Components.AmplifyOauthButton, HTMLElement {}
export const AmplifyOauthButton: {
  prototype: AmplifyOauthButton;
  new (): AmplifyOauthButton;
};

interface AmplifyPasswordField extends Components.AmplifyPasswordField, HTMLElement {}
export const AmplifyPasswordField: {
  prototype: AmplifyPasswordField;
  new (): AmplifyPasswordField;
};

interface AmplifyPhoneField extends Components.AmplifyPhoneField, HTMLElement {}
export const AmplifyPhoneField: {
  prototype: AmplifyPhoneField;
  new (): AmplifyPhoneField;
};

interface AmplifyPhotoPicker extends Components.AmplifyPhotoPicker, HTMLElement {}
export const AmplifyPhotoPicker: {
  prototype: AmplifyPhotoPicker;
  new (): AmplifyPhotoPicker;
};

interface AmplifyPicker extends Components.AmplifyPicker, HTMLElement {}
export const AmplifyPicker: {
  prototype: AmplifyPicker;
  new (): AmplifyPicker;
};

interface AmplifyRadioButton extends Components.AmplifyRadioButton, HTMLElement {}
export const AmplifyRadioButton: {
  prototype: AmplifyRadioButton;
  new (): AmplifyRadioButton;
};

interface AmplifyRequireNewPassword extends Components.AmplifyRequireNewPassword, HTMLElement {}
export const AmplifyRequireNewPassword: {
  prototype: AmplifyRequireNewPassword;
  new (): AmplifyRequireNewPassword;
};

interface AmplifyS3Album extends Components.AmplifyS3Album, HTMLElement {}
export const AmplifyS3Album: {
  prototype: AmplifyS3Album;
  new (): AmplifyS3Album;
};

interface AmplifyS3Image extends Components.AmplifyS3Image, HTMLElement {}
export const AmplifyS3Image: {
  prototype: AmplifyS3Image;
  new (): AmplifyS3Image;
};

interface AmplifyS3ImagePicker extends Components.AmplifyS3ImagePicker, HTMLElement {}
export const AmplifyS3ImagePicker: {
  prototype: AmplifyS3ImagePicker;
  new (): AmplifyS3ImagePicker;
};

interface AmplifyS3Text extends Components.AmplifyS3Text, HTMLElement {}
export const AmplifyS3Text: {
  prototype: AmplifyS3Text;
  new (): AmplifyS3Text;
};

interface AmplifyS3TextPicker extends Components.AmplifyS3TextPicker, HTMLElement {}
export const AmplifyS3TextPicker: {
  prototype: AmplifyS3TextPicker;
  new (): AmplifyS3TextPicker;
};

interface AmplifySection extends Components.AmplifySection, HTMLElement {}
export const AmplifySection: {
  prototype: AmplifySection;
  new (): AmplifySection;
};

interface AmplifySelect extends Components.AmplifySelect, HTMLElement {}
export const AmplifySelect: {
  prototype: AmplifySelect;
  new (): AmplifySelect;
};

interface AmplifySelectMfaType extends Components.AmplifySelectMfaType, HTMLElement {}
export const AmplifySelectMfaType: {
  prototype: AmplifySelectMfaType;
  new (): AmplifySelectMfaType;
};

interface AmplifySignIn extends Components.AmplifySignIn, HTMLElement {}
export const AmplifySignIn: {
  prototype: AmplifySignIn;
  new (): AmplifySignIn;
};

interface AmplifySignInButton extends Components.AmplifySignInButton, HTMLElement {}
export const AmplifySignInButton: {
  prototype: AmplifySignInButton;
  new (): AmplifySignInButton;
};

interface AmplifySignOut extends Components.AmplifySignOut, HTMLElement {}
export const AmplifySignOut: {
  prototype: AmplifySignOut;
  new (): AmplifySignOut;
};

interface AmplifySignUp extends Components.AmplifySignUp, HTMLElement {}
export const AmplifySignUp: {
  prototype: AmplifySignUp;
  new (): AmplifySignUp;
};

interface AmplifyStrike extends Components.AmplifyStrike, HTMLElement {}
export const AmplifyStrike: {
  prototype: AmplifyStrike;
  new (): AmplifyStrike;
};

interface AmplifyToast extends Components.AmplifyToast, HTMLElement {}
export const AmplifyToast: {
  prototype: AmplifyToast;
  new (): AmplifyToast;
};

interface AmplifyTooltip extends Components.AmplifyTooltip, HTMLElement {}
export const AmplifyTooltip: {
  prototype: AmplifyTooltip;
  new (): AmplifyTooltip;
};

interface AmplifyTotpSetup extends Components.AmplifyTotpSetup, HTMLElement {}
export const AmplifyTotpSetup: {
  prototype: AmplifyTotpSetup;
  new (): AmplifyTotpSetup;
};

interface AmplifyUsernameField extends Components.AmplifyUsernameField, HTMLElement {}
export const AmplifyUsernameField: {
  prototype: AmplifyUsernameField;
  new (): AmplifyUsernameField;
};

interface AmplifyVerifyContact extends Components.AmplifyVerifyContact, HTMLElement {}
export const AmplifyVerifyContact: {
  prototype: AmplifyVerifyContact;
  new (): AmplifyVerifyContact;
};

/**
 * Utility to define all custom elements within this package using the tag name provided in the component's source. 
 * When defining each custom element, it will also check it's safe to define by:
 *
 * 1. Ensuring the "customElements" registry is available in the global context (window).
 * 2. The component tag name is not already defined.
 *
 * Use the standard [customElements.define()](https://developer.mozilla.org/en-US/docs/Web/API/CustomElementRegistry/define) 
 * method instead to define custom elements individually, or to provide a different tag name.
 */
export declare const defineCustomElements: (opts?: any) => void;

export * from '../types';
