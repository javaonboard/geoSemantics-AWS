import{Logger as e,isEmpty as r}from"@aws-amplify/core";import{A as t,C as o}from"./p-417bb5ea.js";import{Auth as s,CognitoUser as a}from"@aws-amplify/auth";import{T as n}from"./p-26837fd8.js";import{N as i}from"./p-2915ed18.js";import{a as c}from"./p-afe95d96.js";const f=new e("auth-helpers");async function p(e,o){if(!s||"function"!=typeof s.verifiedContact)throw new Error(i);if(w(e))try{const a=await s.verifiedContact(e);if(!r(a.verified)||r(a.unverified))o(t.SignedIn,e);else{const r=Object.assign(e,a);o(t.VerifyContact,r)}}catch(a){c(a)}else o(t.SignedIn,e)}const m=async(e,r,a)=>{if(!s||"function"!=typeof s.signIn)throw new Error(i);try{const n=await s.signIn(e,r);f.debug(n),n.challengeName===o.SMSMFA||n.challengeName===o.SoftwareTokenMFA?(f.debug("confirm user with "+n.challengeName),a(t.ConfirmSignIn,n)):n.challengeName===o.NewPasswordRequired?(f.debug("require new password",n.challengeParam),a(t.ResetPassword,n)):n.challengeName===o.MFASetup?(f.debug("TOTP setup",n.challengeParam),a(t.TOTPSetup,n)):n.challengeName===o.CustomChallenge&&n.challengeParam&&"true"===n.challengeParam.trigger?(f.debug("custom challenge",n.challengeParam),a(t.CustomConfirmSignIn,n)):await p(n,a)}catch(m){"UserNotConfirmedException"===m.code?(f.debug("the user is not confirmed"),a(t.ConfirmSignUp,{username:e})):"PasswordResetRequiredException"===m.code?(f.debug("the user requires a new password"),a(t.ForgotPassword,{username:e})):"InvalidParameterException"===m.code&&""===r&&(f.debug("Password cannot be empty"),m.message=n.EMPTY_PASSWORD),c(m)}},w=e=>e instanceof a;export{p as c,m as h}